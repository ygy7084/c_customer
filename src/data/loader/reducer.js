import {
  WAITING as LOGIN_WAITING,
  SUCCESS as LOGIN_SUCCESS,
  FAILURE as LOGIN_FAILURE,
} from './../../scenes/Entry/data/login/actions';
import {
  WAITING as AUTH_WAITING,
  SUCCESS as AUTH_SUCCESS,
  FAILURE as AUTH_FAILURE,
} from './../auth/actions';
import {
  RETRIEVE_ONE_WAITING as ACCOUNT_RETRIEVE_ONE_WAITING,
  RETRIEVE_ONE_SUCCESS as ACCOUNT_RETRIEVE_ONE_SUCCESS,
  RETRIEVE_ONE_FAILURE as ACCOUNT_RETRIEVE_ONE_FAILURE,
  RETRIEVE_MANY_WAITING as ACCOUNT_RETRIEVE_MANY_WAITING,
  RETRIEVE_MANY_SUCCESS as ACCOUNT_RETRIEVE_MANY_SUCCESS,
  RETRIEVE_MANY_FAILURE as ACCOUNT_RETRIEVE_MANY_FAILURE,
  MODIFY_ONE_WAITING as ACCOUNT_MODIFY_ONE_WAITING,
  MODIFY_ONE_SUCCESS as ACCOUNT_MODIFY_ONE_SUCCESS,
  MODIFY_ONE_FAILURE as ACCOUNT_MODIFY_ONE_FAILURE,
  CREATE_ONE_WAITING as ACCOUNT_CREATE_ONE_WAITING,
  CREATE_ONE_SUCCESS as ACCOUNT_CREATE_ONE_SUCCESS,
  CREATE_ONE_FAILURE as ACCOUNT_CREATE_ONE_FAILURE,
  REMOVE_ONE_WAITING as ACCOUNT_REMOVE_ONE_WAITING,
  REMOVE_ONE_SUCCESS as ACCOUNT_REMOVE_ONE_SUCCESS,
  REMOVE_ONE_FAILURE as ACCOUNT_REMOVE_ONE_FAILURE,
  REMOVE_MANY_WAITING as ACCOUNT_REMOVE_MANY_WAITING,
  REMOVE_MANY_SUCCESS as ACCOUNT_REMOVE_MANY_SUCCESS,
  REMOVE_MANY_FAILURE as ACCOUNT_REMOVE_MANY_FAILURE,
} from './../../scenes/Admin/data/account/actions';

const initialState = false;
const loading = (state, action) => {
  switch (action.type) {
    case LOGIN_WAITING:
    case AUTH_WAITING:
    case ACCOUNT_RETRIEVE_ONE_WAITING:
    case ACCOUNT_RETRIEVE_MANY_WAITING:
    case ACCOUNT_MODIFY_ONE_WAITING:
    case ACCOUNT_CREATE_ONE_WAITING:
    case ACCOUNT_REMOVE_ONE_WAITING:
    case ACCOUNT_REMOVE_MANY_WAITING:
      return true;
    case LOGIN_SUCCESS:
    case LOGIN_FAILURE:
    case AUTH_SUCCESS:
    case AUTH_FAILURE:
    case ACCOUNT_RETRIEVE_ONE_SUCCESS:
    case ACCOUNT_RETRIEVE_ONE_FAILURE:
    case ACCOUNT_RETRIEVE_MANY_SUCCESS:
    case ACCOUNT_RETRIEVE_MANY_FAILURE:
    case ACCOUNT_MODIFY_ONE_SUCCESS:
    case ACCOUNT_MODIFY_ONE_FAILURE:
    case ACCOUNT_CREATE_ONE_SUCCESS:
    case ACCOUNT_CREATE_ONE_FAILURE:
    case ACCOUNT_REMOVE_ONE_SUCCESS:
    case ACCOUNT_REMOVE_ONE_FAILURE:
    case ACCOUNT_REMOVE_MANY_SUCCESS:
    case ACCOUNT_REMOVE_MANY_FAILURE:
      return false;
    default:
      return state;
  }
};
export const reducer = (state = initialState, action) => {
  switch (action.type) {
    default:
      return loading(state, action);
  }
};